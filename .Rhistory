library(flexdashboard) # always
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/caratula.png")
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/introduccion.png")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/graficos/graf1.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/graficos/graf2.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/graficos/graf4.rds")
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/literature_review.png")
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/variables_independientes.png")
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/metodologia.png")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/mapas/map2.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/mapas/map4.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/mapas/map10.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/graficos/graf_turn_bar.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/graficos/dist3.rds")
knitr::include_graphics("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/imagenes/pendientes.png")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
library(rio)
extortion <- st_read("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/extorsiones_2021-2023.gpkg")
View(extortion)
knitr::opts_chunk$set(echo = TRUE)
library(rio)
library(dplyr)
library(magrittr)
autoridades_2014=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2014/ERM2014_Autoridades_Distrital.xlsx")
padron_2014=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2014/ERM2014_Padron_Distrital.xlsx")
autoridades_2018=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2018/ERM2018_Autoridades_Distrital.xlsx")
padron_2018=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2018/ERM2018_Padron_Distrital.xlsx")
autoridades_2022=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2022/ERM2022_Autoridades_Distrital.xlsx")
padron_2022=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/JNE/MUNICIPAL DISTRITAL 2022/ERM2022_Padron_Distrital.xlsx")
autoridades_2014_pre=select(autoridades_2014, c(1:4,8,9))
names(autoridades_2014_pre)=c("region","provincia","distrito","cargo","org_pol","tipo_org_pol")
autoridades_2014_pre=filter(autoridades_2014_pre, cargo=='ALCALDE DISTRITAL')
autoridades_2018_pre=select(autoridades_2018,c(1:4,8,9))
names(autoridades_2018_pre)=c("region","provincia","distrito","cargo","org_pol","tipo_org_pol")
autoridades_2018_pre=filter(autoridades_2018_pre, cargo=='ALCALDE DISTRITAL')
autoridades_2022_pre=select(autoridades_2022,c(1:4,8,9))
names(autoridades_2022_pre)=c("region","provincia","distrito","cargo","org_pol","tipo_org_pol")
autoridades_2022_pre=filter(autoridades_2022_pre, cargo=='ALCALDE DISTRITAL')
autoridades_2014_pre$ubicacion_completa <- paste(autoridades_2014_pre$region, autoridades_2014_pre$provincia, autoridades_2014_pre$distrito, sep = "-")
autoridades_2018_pre$ubicacion_completa <- paste(autoridades_2018_pre$region, autoridades_2018_pre$provincia, autoridades_2018_pre$distrito, sep = "-")
autoridades_2022_pre$ubicacion_completa <- paste(autoridades_2022_pre$region, autoridades_2022_pre$provincia, autoridades_2022_pre$distrito, sep = "-")
alcaldes_2014_2018=merge(autoridades_2014_pre, autoridades_2018_pre, by="ubicacion_completa", all.y=TRUE)
alcaldes_2018_2022=merge(autoridades_2018_pre, autoridades_2022_pre, by="ubicacion_completa", all.y=TRUE)
# Supongamos que ya tienes el data frame 'elecciones_merged' tras el merge.
# Crear la nueva columna 'mismo_partido'
alcaldes_2014_2018$mismo_partido <- ifelse(alcaldes_2014_2018$org_pol.x == alcaldes_2014_2018$org_pol.y, "SI", "NO")
alcaldes_2018_2022$mismo_partido <- ifelse(alcaldes_2018_2022$org_pol.x == alcaldes_2018_2022$org_pol.y, "SI", "NO")
table(alcaldes_2018_2022$mismo_partido)
table(alcaldes_2014_2018$mismo_partido)
alcaldes_2014_2018$mismo_partido2 <- ifelse(alcaldes_2014_2018$org_pol.y == alcaldes_2014_2018$org_pol.x, "SI", "NO")
table(alcaldes_2014_2018$mismo_partido2)
reeleccion_2018=table(alcaldes_2014_2018$mismo_partido)
reeleccion_2022=table(alcaldes_2018_2022$mismo_partido)
reeleccion_2018 <- as.data.frame(reeleccion_2018)
reeleccion_2022 <- as.data.frame(reeleccion_2022)
colnames(reeleccion_2018) <- c("releecion", "Frecuencia")
colnames(reeleccion_2022) <- c("releecion", "Frecuencia")
library(ggthemes)
library(ggplot2)
# Crear el gráfico de barras
bar_sub1=ggplot(reeleccion_2018, aes(x = releecion, y = Frecuencia, fill = releecion)) +
geom_bar(stat = "identity", width = 0.5) +
labs(title = "Número de Partidos que se Reeligieron vs No Reeligieron en el 2018", x = "Mismo Partido", y = "Número de Distritos") +
theme_minimal() +
theme(legend.position = "right") +
scale_fill_manual(values = c("SI" = "blue", "NO" = "red"), name = "Reelección")
bar_sub1+theme_test()
# Crear el gráfico de barras
bar_sub2=ggplot(reeleccion_2022, aes(x = releecion, y = Frecuencia, fill = releecion)) +
geom_bar(stat = "identity", width = 0.5) +
labs(title = "Número de Partidos que se Reeligieron vs No Reeligieron en el 2022", x = "Mismo Partido", y = "Número de Distritos") +
theme_minimal() +
theme(legend.position = "right") +
scale_fill_manual(values = c("SI" = "blue", "NO" = "red"), name = "Reelección")
bar_sub2+theme_test()
saveRDS(bar_sub1, file = "bar_sub1.rds")
saveRDS(bar_sub2, file = "bar_sub2.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/mapas/")
knitr::opts_chunk$set(echo = TRUE)
library(sf)
datos <- st_read("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/extorsiones_2021-2023.gpkg")
library(flexdashboard)
library(shiny)
library(jsonlite)
library(ggplot2)
library(tidyr)
library(dplyr)
library(purrr)
library(leaflet)
library(plotly)
library(magrittr)
asignar_color <- function(turno) {
colores <- c("madrugada" = "blue", "mañana" = "green", "tarde" = "orange", "noche" = "red")
return(colores[turno])
}
datos$color_turno <- asignar_color(datos$turno_hech)
leaflet() %>%
addTiles() %>%
fitBounds(-18.348696,-0.038712, -81.328125,-68.671875) %>%
addCircleMarkers(datos$long_hecho,
datos$lat_hecho,
color = datos$color_turno,
radius = 6,
fill = T,
fillOpacity = 0.2,
opacity = 0.6,
popup = paste(datos$distrito,
datos$provincia,
sep = ""))%>%
addLegend("bottomleft",
colors = c("blue","green", "orange", "red"),
labels = c("Madrugada",
"Mañana",
"Tarde",
"Noche"),
opacity = 0.8)
turnos=table(datos$turno_hech)
turnos
comisarias=datos%>%
group_by(comisaria)%>%
summarize(denuncias=n())
summary(comisarias$denuncias)
comisarias=filter(comisarias, denuncias>=15)
leaflet() %>%
addTiles() %>%
fitBounds(-18.348696,-0.038712, -81.328125,-68.671875) %>%
addCircleMarkers(datos$long_hecho,
datos$lat_hecho,
color = datos$color_turno,
radius = 6,
fill = T,
fillOpacity = 0.2,
opacity = 0.6,
popup = paste(datos$distrito,
datos$provincia,
sep = ""))%>%
addLegend("bottomleft",
colors = c("blue","green", "orange", "red"),
labels = c("Madrugada",
"Mañana",
"Tarde",
"Noche"),
opacity = 0.8)
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
library(magrittr)
library(rio)
library(sp)
library(ggplot2)
library(ggplot2)
library(sf)
delitos=import("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/SIDPOL/SIDPOL_2018-2024.xlsx")
names(delitos)
names(delitos)=c("year","mes","departamento","provincia","distrito","ubigeo","tipos","denuncias","distrito_emergencia")
table(delitos$tipos)
library(lsr)
IC_tipo = delitos |>
group_by(tipos) |>
summarise(media = mean(denuncias, na.rm=T),
liminf = ciMean(denuncias, na.rm=T)[1],
limsup = ciMean(denuncias, na.rm=T)[2]
)
graf1 <- ggplot(IC_tipo, aes(x = tipos, y = media)) +
geom_bar(stat = "identity") +
geom_errorbar(aes(ymin = liminf, ymax = limsup), width = 0.2) +
geom_text(aes(label = paste(round(media, 1))), vjust = -1, size = 3) +
xlab("Tipo de delitos") +
ylab("Número de denuncias") +
ylim(0, 80) +
ggtitle("Promedio del tipo de denuncias") +
theme_light() +
theme(axis.text.x = element_text(size = 4))  # Reducir el tamaño del texto en el eje x
graf1
saveRDS(graf1, file = "graf1.rds")
graf2=ggplot(delitos, aes(x = tipos, y = denuncias)) +
geom_boxplot() + coord_flip() +
theme_light() +
labs(x = "Tipos de delitos", y = "Número de denuncias") +
ggtitle("Distribución de denuncias por tipo de delito")
graf2
mapPROV_total=read_sf("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/provincias/provincias_totales.gpkg",layer="provincias")
mapPROV=sf::read_sf("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/provincias/PROVINCIAS.shp")
ggplot(mapPROV)+geom_sf()
library(viridis)
#debido a que en python el método que mejores resultados otorgó fue el de JenksCaspall, se utilizará esa información
# Crea el gráfico
map1=ggplot(data = mapPROV_total) +
theme_light() +
geom_sf(aes(fill = Total_jc5_cat), color = NA) +
scale_fill_viridis_c(option = "D", direction = -1)
map1
View(mapPROV_total)
library(viridis)
library(plotly)
# Convertir a plotly
map2 <- ggplotly(
ggplot(data = mapPROV_total) +
theme_light() +
geom_sf(aes(fill = Total_jc5_cat, text = provincias), color = NA) +
scale_fill_viridis_c(option = "D", direction = -1)
)
# Mostrar el mapa interactivo
map2
# Crear el gráfico de mapa de calor
map3 <- ggplot(mapPROV_total) +
geom_sf(aes(fill = total_denuncias)) +
scale_fill_gradient(low = "white", high = "darkred")  # Invertir la escala de colores
# Mostrar el gráfico
print(map3)
saveRDS(map3, file = "map3.rds")
library(sp)
library(ggplot2)
mapDPT=sf::read_sf("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/departamentos/DEPARTAMENTO.shp")
ggplot(mapDPT) + geom_sf()
extor_total=import("~/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/SIDPOL/SIDPOL_departamentos_extorsion/ext_total.csv")
#se cambiará de nombre a las columnas para poder realizar el merge
names(extor_total)=c("DEPARTAMEN","denuncias_extor")
geoextor=merge(mapDPT, extor_total)
# Crear el gráfico de mapa de calor
DPT_extor <- ggplot(geoextor) +
geom_sf(aes(fill = denuncias_extor)) +
scale_fill_gradient(low = "white", high = "darkred")  # Invertir la escala de colores
# Mostrar el gráfico
print(DPT_extor)
den_mod=import("https://github.com/krlos20203563/Delincuencia_en_el_Peru/raw/main/SIDPOL/SIDPOL_dpt_extorsion.xlsx")
ext_years=filter(den_mod, PMODALIDADES=="Extorsión")
ext_years=ext_years%>%
group_by(ANIO)%>%
summarise(n_extor=sum(n_dist_ID_DGC))
names(ext_years)=c("years","n_extor")
ext_years$years=as.numeric(ext_years$years)
graf4=ggplot(ext_years, aes(x = years, y = n_extor)) +
geom_line() +
geom_point() +
labs(title = "Denuncias por extorsión del 2018-2024",
x = "Año",
y = "Total de casos") +
theme_minimal()
graf4
saveRDS(map1, file = "map1.rds")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/map1.rds")
# Crear el gráfico de mapa de calor
map3 <- ggplot(mapPROV_total) +
geom_sf(aes(fill = total_denuncias)) +
scale_fill_gradient(low = "white", high = "darkred")  # Invertir la escala de colores
# Mostrar el gráfico
print(map3)
saveRDS(map3, file = "map3.rds")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/map3.rds")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/map3.rds")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/map1.rds")
readRDS("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru/mapas/map10.rds")
rm(list = ls())
library(sf)
linkWorld_gpkg="https://github.com/krlos20203563/ASIE_expo_final/raw/main/extor_analytics.gpkg"
sf::st_layers(linkWorld_gpkg)
rm(list = ls())
library(sf)
linkprov_extor="https://github.com/krlos20203563/ASIE_expo_final/raw/main/extor_analytics.gpkg"
sf::st_layers(linkprov_extor)
prov_extor=read_sf(linkprov_extor,layer="linkprov_extor")
prov_extor=read_sf(linkprov_extor,layer="linkprov_extor")
rm(list = ls())
library(sf)
linkprov_extor="https://github.com/krlos20203563/ASIE_expo_final/raw/main/extor_analytics.gpkg"
sf::st_layers(linkprov_extor)
prov_extor=read_sf(linkprov_extor,layer="provBorders")
View(prov_extor)
knitr::opts_chunk$set(echo = TRUE)
rm(list = ls())
library(sf)
linkWorld_gpkg="https://github.com/krlos20203563/ASIE_2024-1/raw/main/data_TA2/maps/worldMap.gpkg"
sf::st_layers(linkWorld_gpkg)
link_rpy_gpkg="https://github.com/SocialAnalytics-StrategicIntelligence/GeoDFBasics_py/raw/main/maps/peruMap_5389.gpkg"
sf::st_layers(link_rpy_gpkg)
peru_airports=read_sf(link_rpy_gpkg,layer="airports")
View(peru_airports)
rm(list = ls())
library(sf)
linkprov_extor="https://github.com/krlos20203563/ASIE_expo_final/raw/main/extor_analytics.gpkg"
sf::st_layers(linkprov_extor)
prov_extor=read_sf(linkprov_extor,layer="provBorders")
table(prov_extor$EXTORTION_quadrant_names)
table(prov_extor$EXTOR_quadrant_21_22_names)
# Crear el mapa coloreando según las categorías de EXTORTION_quadrant_names
map_MORAN <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "black") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "blue", "3" = "green", "4" = "orange"),
labels = c("0" = "no_sig", "1" = "hotSpot", "2" = "coldOutlier", "3" = "coldSpot", "4" = "hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa)
# Crear el mapa coloreando según las categorías de EXTORTION_quadrant_names
map_MORAN <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "black") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "blue", "3" = "green", "4" = "orange"),
labels = c("0" = "no_sig", "1" = "hotSpot", "2" = "coldOutlier", "3" = "coldSpot", "4" = "hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(map_MORAN)
# Crear el mapa coloreando según las categorías de EXTORTION_quadrant_names
map_MORAN <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "blue", "3" = "green", "4" = "orange"),
labels = c("0" = "no_sig", "1" = "hotSpot", "2" = "coldOutlier", "3" = "coldSpot", "4" = "hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(map_MORAN)
library(ggplot2)
library(sf)
library(dplyr)
library(tmap)
install.packages(tmap)
install.packages("tmap")
library(ggplot2)
library(sf)
library(dplyr)
library(tmap)
# Crear el mapa coloreando según las categorías de EXTORTION_quadrant_names
map_MORAN <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "blue", "3" = "green", "4" = "orange"),
labels = c("0" = "no_sig", "1" = "hotSpot", "2" = "coldOutlier", "3" = "coldSpot", "4" = "hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(map_MORAN)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "black") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "EXTORTION_quadrant_names", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "EXTORTION_quadrant_names", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = factor(EXTORTION_quadrant_names)), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "EXTORTION_quadrant_names", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTORTION_quadrant_names), color = "white") +
scale_fill_manual(values = c("0" = "grey", "1" = "red", "2" = "darkblue", "3" = "lightblue", "4" = "orange"),
labels = c("0" = "0 no_sig", "1" = "1 hotSpot", "2" = "2 coldOutlier", "3" = "3 coldSpot", "4" = "4 hotOutlier")) +
theme_minimal() +
labs(fill = "EXTORTION_quadrant_names", title = "Mapa de Extorsión en Provincias del Perú")
print(mapa)
# Definir los colores para cada categoría
colores <- c("0 no_sig" = "grey",
"1 hotSpot" = "red",
"2 coldOutlier" = "blue",
"3 coldSpot" = "lightblue",
"4 hotOutlier" = "orange")
# Crear el mapa
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTORTION_quadrant_names), color = "black") +
scale_fill_manual(values = colores) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa)
# Definir los colores para cada categoría
colores <- c("0 no_sig" = "white",
"1 hotSpot" = "red",
"2 coldOutlier" = "green",
"3 coldSpot" = "black",
"4 hotOutlier" = "orange")
# Crear el mapa
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTORTION_quadrant_names), color = "white") +
scale_fill_manual(values = colores) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa)
# Definir los colores para cada categoría
colores <- c("0 no_sig" = "white",
"1 hotSpot" = "red",
"2 coldOutlier" = "green",
"3 coldSpot" = "black",
"4 hotOutlier" = "orange")
# Crear el mapa
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTORTION_quadrant_names), color = "black") +
scale_fill_manual(values = colores) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa)
# Definir los colores para cada categoría
colores <- c("0 no_sig" = "white",
"1 hotSpot" = "red",
"2 coldOutlier" = "green",
"3 coldSpot" = "blue",
"4 hotOutlier" = "orange")
# Crear el mapa
mapa <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTORTION_quadrant_names), color = "black") +
scale_fill_manual(values = colores) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa)
saveRDS(mapa, "map_MORAN.rds")
colores2 <- c("0 no_sig" = "white",
"1 hotSpot" = "red",
"2 coldOutlier" = "black",
"4 hotOutlier" = "orange")
# Crear el mapa
mapa_BV <- ggplot(data = prov_extor) +
geom_sf(aes(fill = EXTOR_quadrant_21_22_names), color = "black") +
scale_fill_manual(values = colores2) +
theme_minimal() +
labs(fill = "Categoría", title = "Mapa de Extorsión en Provincias del Perú")
# Mostrar el mapa
print(mapa_BV)
saveRDS(mapa_BV, "mapa_BV.rds")
saveRDS(mapa,file= "map_MORAN.rds")
saveRDS(mapa_BV, file = "mapa_BV.rds")
setwd("C:/Users/Carlos Daniel/Documents/Tesis_de_Licenciatura/Delincuencia_en_el_Peru")
saveRDS(mapa_BV, file = "mapa_BV.rds")
saveRDS(mapa,file= "map_MORAN.rds")
setwd("C:/Users/Carlos Daniel/Documents/2024-1/ASIE/ASIE_expo_final")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/map_MORAN.rds")
readRDS("~/2024-1/ASIE/ASIE_expo_final/mapas/mapa_BV.rds")
